<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_player</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.5;
hsp = 0;
vsp = 0;
jumpspeed = 9;
movespeed = 4;
jumps = 0;
jumpsmax = 2;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get the player's input
image_speed = 0.5
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_space);
key_jump_held = keyboard_check(vk_space);

//React to inputs
isMoving = key_left + key_right;
hsp = isMoving * movespeed; 


if (vsp &lt; 10) 
{
    vsp += grav;
}
 
if (place_meeting(x,y+1,obj_wall) || place_meeting(x,y+1,obj_grass_mid))
{
   jumps = jumpsmax;
}

if ((key_jump) &amp;&amp; (jumps &gt; 0)) 
{
     if(jumps = jumpsmax)
    {
    audio_play_sound(snd_jump,1,0)
        
    }
    else 
        {
            audio_play_sound(snd_jump_two,1,0)
        }

    jumps -= 1;
    vsp = -jumpspeed;
   
}
  
if ((vsp &lt; 0) &amp;&amp; (!key_jump_held))
{
    vsp = max(vsp,0)
}
  
//Horizontal Collision
if (place_meeting(x+hsp,y,obj_wall))
{
    while(!place_meeting(x+sign(hsp),y,obj_wall))
    {
        x += sign(hsp);        
    }
    hsp = 0;
    
}

if(place_meeting(x+hsp,y,obj_grass_mid)) 
{
    
    while(!place_meeting(x+sign(hsp),y,obj_grass_mid))
    {
        x += sign(hsp);
       
    }
    hsp = 0;
}

x += hsp;

 
//Vertical Collision
if (place_meeting(x,y+vsp,obj_wall))
{
    while(!place_meeting(x,y+sign(vsp),obj_wall))
    {
        y += sign(vsp);
    }
    vsp = 0;
}

if(place_meeting(x,y+vsp,obj_grass_mid)) 
{
    
    while(!place_meeting(x,y+sign(vsp),obj_grass_mid))
    {
        y += sign(vsp);
    }
    vsp = 0;
    
}
y += vsp;



//animate
if (isMoving != 0) 
{
    image_xscale = isMoving;
}

if (place_meeting(x,y+1,obj_wall) || place_meeting(x,y+1,obj_grass_mid))
{
    if (isMoving != 0) 
    {
        sprite_index = spr_player_run; 
    }
    else 
    {
        sprite_index = spr_player;
    }
}
else
{
    if (vsp &lt; 0)
    {
        sprite_index = spr_player_ascend;
    }
    else if (vsp &gt; 0)
    {
        sprite_index = spr_player_fall
    }
}

//player hit with witchcap spell
if !instance_exists(obj_witch_dialogue_score)
{
    if instance_exists (obj_dialougue_score)
    {
        image_blend = make_colour_hsv(255, 255, random(255));
        global.points = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == spr_player_ascend)
{
    image_index = 1;
    image_speed = 0;
    
} 

if (sprite_index == spr_player_fall)
{
    image_index = 2;
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
